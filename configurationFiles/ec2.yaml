AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
        -
          Key: "Name"
          Value: "vpcA"
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: "Name"
          Value: "igwA"
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.0.0/20"
      AvailabilityZone: "ap-northeast-1a"
      Tags:
        -
          Key: "Name"
          Value: "SubnetA"
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: "Name"
          Value: "RouteTableA"
  AttachSubnet:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet
  AttachRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref IGW
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "SampleSecurityGroup"
      GroupName: "sampleSecurityGroup"
      SecurityGroupEgress: # Outbound rules
        -
          IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: '0.0.0.0/0'
        -
          IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIpv6: '::/0'
      SecurityGroupIngress: # Inbound rules
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: '::/0'
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 2
          CidrIp: '0.0.0.0/0'
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIpv6: '::/0'
        -
          IpProtocol: tcp
          FromPort: 1024
          ToPort: 65535
          CidrIp: '0.0.0.0/0'
        -
          IpProtocol: tcp
          FromPort: 1024
          ToPort: 65535
          CidrIpv6: '::/0'
      VpcId: !Ref VPC
      Tags:
        -
          Key: "Name"
          Value: "SecurityGroupA"
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0c3fd0f5d33134a76" # AMI ID
      InstanceType: "t2.micro"
      KeyName: "cloudformation"
      NetworkInterfaces:
        -
          AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref SecurityGroup
          SubnetId: !Ref Subnet
      # SecurityGroupIds:
      #   - !Ref SecurityGroup
      # SubnetId: !Ref Subnet
      Tags:
        -
          Key: "Name"
          Value: "InstanceA"
  # NetworkACL is configured when VPC is created.
  # Default NetworkACL is fully opened in both Inbound and Outbound.
  # NetworkACL:
  #   Type: AWS::EC2::NetworkAcl
  #   Properties:
  #     VpcId: !Ref VPC
  # NetworkACLEntity:
  #   Type: AWS::EC2::NetworkAclEntry
  #   Properties:
  #     CidrBlock: "0.0.0.0/0"
  #     Egress: false
  #     # Icmp:
  #     #   Icmp
  #     # Ipv6CidrBlock: String
  #     NetworkAclId: !Ref NetworkACL
  #     PortRange:
  #       From: 1024
  #       To: 65535
  #     Protocol: 6
  #     RuleAction: "allow"
  #     RuleNumber: 140